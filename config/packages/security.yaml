security:
    enable_authenticator_manager: true
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # definicja jak użytkownicy sa ładowani z bazy danych, jaka klasa i jaki identyfikator
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
    # Firewall określa, jakie zasady bezpieczeństwa są stosowane na określonych ścieżkach
    firewalls:
        login:
            pattern: ^/api/login
            stateless: true
            json_login:
                check_path: /api/login
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern: ^/api
            stateless: true
            jwt: ~

        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    role_hierarchy:
        ROLE_ADMIN: [ROLE_TEACHER, ROLE_STUDENT, ROLE_USER]
        ROLE_TEACHER: [ROLE_USER]
        ROLE_STUDENT: [ROLE_USER]

    access_control:
        # Public endpoints
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
       

        # Kursy: ROLE_TEACHER
        - { path: ^/api/courses, roles: ROLE_TEACHER }

        # Zapisy na Kursy: ROLE_ADMIN
        - { path: ^/api/enrollments, roles: ROLE_ADMIN }

        # Akcja dla studenta: ROLE_STUDENT
        - { path: ^/api/students/\d+/enrollments, roles: ROLE_STUDENT }
        - { path: ^/api/students/enrollments/\d+/grade, roles: ROLE_STUDENT }

        # Studenci: ROLE_ADMIN
        - { path: ^/api/students, roles: ROLE_ADMIN }

        # Akcje dla nauczyciela: ROLE_TEACHER
        - { path: ^/api/teachers/courses, roles: ROLE_TEACHER }
        - { path: ^/api/teachers/courses/\d+/capacity, roles: ROLE_TEACHER }
        - { path: ^/api/teachers/courses/\d+/block, roles: ROLE_TEACHER }
        - { path: ^/api/teachers/courses/\d+/unblock, roles: ROLE_TEACHER }
        - { path: ^/api/teachers/courses/\d+/students, roles: ROLE_TEACHER }
        - { path: ^/api/teachers/enrollments/\d+/grade, roles: ROLE_TEACHER }

        # Nauczyciele, użytkownicy: ROLE_ADMIN
        - { path: ^/api/teachers, roles: ROLE_ADMIN }
        - { path: ^/api/users, roles: ROLE_ADMIN }
        - { path: ^/api/doc, roles: ROLE_ADMIN }

        # Default deny all
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
        # - { path: ^/api/courses, roles: [ROLE_TEACHER, ROLE_ADMIN] }
        # - { path: ^/api/teachers, roles: ROLE_TEACHER }
        # - { path: ^/api/students, roles: ROLE_STUDENT }
        # - { path: ^/api, roles: ROLE_ADMIN }

        # - { path: ^/api/doc, roles: PUBLIC_ACCESS }
        # - { path: ^/api$, roles: IS_AUTHENTICATED_FULLY }
        # - { path: ^/api/students, roles: ROLE_STUDENT }
        # - { path: ^/api/teacher, roles: ROLE_TEACHER }
        # - { path: ^/api/users, roles: ROLE_ADMIN }
        # - { path: ^/api/admin, roles: ROLE_ADMIN }
        # - { path: ^/api/, roles: IS_AUTHENTICATED_FULLY }
        # - { path: ^/api/login, roles: PUBLIC_ACCESS }
        # - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
